{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/labeling-my-music","webpackCompilationHash":"08a57498c7f504c79e87","result":{"data":{"markdownRemark":{"html":"<style>\n.spectrum-demo-1 {\n  width: 100%;\n  margin: 35px auto;\n  display: flex;\n  justify-content: center;\n}\n\n.spectrum-demo-1 div {\n  margin: 0 1px;\n}\n\n.spectrum-demo-2 {\n  margin: 35px auto;\n  width: 400px;\n  display: flex;\n  align-items: center;\n}\n\n.spectrum-demo-spacer {\n  flex: 1;\n  border-bottom: solid 1px #99adc7;\n  margin: 0 0px;\n}\n\n.spectrum-demo-label {\n  border: solid 1px #99adc7;\n  border-radius: 16px;\n  padding: 0 10px;\n  white-space: nowrap;\n}\n</style>\n<p><a href=\"/files/66cc089c3b129e11d3c5c3cdb026688f/labels-collage.jpg\"><img src=\"/files/66cc089c3b129e11d3c5c3cdb026688f/labels-collage.jpg\" /></a></p>\n<p>I squeeze albums into my commutes. I plug my ears with earbuds during periods\nof intense focus. I keep the playlist going when I get home. I do laundry,\nscrub the kitchen, and vacuum the floors more frequently just to sample some\nmore music.</p>\n<p>I lost the energy to carefully curate a collection of mp3s on my\nhard drive. This transition was gradual. I started listening to my\n“matched” existing library via Apple Music. Then I stopped buying and\ndownloading new music, using streaming services to discover and play new\ntracks. Eventually, after sampling Spotify’s recommendations, I\nabandoned my local collection of music, and became a full convert to the\nstreaming platform.</p>\n<p>I could only use Spotify’s organization features now. I could save songs,\nalbums, and artists. I could create custom playlists, albeit somewhat slowly\nvia drag and drop.</p>\n<p>Playlists aren’t the only way I think about organizing songs. For any song\nI can think of a series of properties to classify it. </p>\n<p>Some of these properties are more objective and absolute, like whether a song features\nacoustic guitar, or spanish language vocals, or samples another song. </p>\n<p>Others are subjective, like which genres the song embodies, whether or not the\nsong is cheerful, or if it’d make a good song for a night drive.</p>\n<!-- graphic about checkboxy booleans -->\n<div class=\"spectrum-demo-1\">\n<div class=\"spectrum-demo-label\">acoustic guitar</div>\n<div class=\"spectrum-demo-label\">spanish</div>\n<div class=\"spectrum-demo-label\">samples</div>\n<div class=\"spectrum-demo-label\">night drive</div>\n</div>\n<p>Many of these properties fall into a set of boolean attributes. A song either\nhas piano or it doesn’t. Sure, you could probably say that a particularly\npiano-forward song has more piano than one that doesn’t, but I believe there’s\ndiminishing utility in attempting to describe that amount of detail for every\ninstrument.</p>\n<p>There are other properties, like acoustic vs. electric or downtempo vs. upbeat, that describe points on a spectrum instead. </p>\n<div class=\"spectrum-demo-2\">\n  <div class=\"spectrum-demo-label\">acoustic</div>\n  <div class=\"spectrum-demo-spacer\"></div>\n  <div class=\"spectrum-demo-label\">electric</div>\n</div>\n<div class=\"spectrum-demo-2\">\n  <div class=\"spectrum-demo-label\">mellow</div>\n  <div class=\"spectrum-demo-spacer\"></div>\n  <div class=\"spectrum-demo-label\">high energy</div>\n</div>\n<p>Or how much you like a track.</p>\n<div class=\"spectrum-demo-2\">\n  <div class=\"spectrum-demo-label\">bad</div>\n  <div class=\"spectrum-demo-spacer\"></div>\n  <div class=\"spectrum-demo-label\">good</div>\n</div>\n<div class=\"spectrum-demo-2\">\n  <div class=\"spectrum-demo-label\">1</div>\n  <div class=\"spectrum-demo-spacer\"></div>\n  <div class=\"spectrum-demo-label\">2</div>\n  <div class=\"spectrum-demo-spacer\"></div>\n  <div class=\"spectrum-demo-label\">3</div>\n  <div class=\"spectrum-demo-spacer\"></div>\n  <div class=\"spectrum-demo-label\">4</div>\n  <div class=\"spectrum-demo-spacer\"></div>\n  <div class=\"spectrum-demo-label\">5</div>\n</div>\n<p>When considering all of these properties, a single song can easily have more\nthan a handful of values. </p>\n<p>I tried organizing my music using playlists for the\nvalues, but adding a single song to ten different playlists got tedious pretty\nquickly.</p>\n<p>Then I learned that Spotify has a <a href=\"https://developer.spotify.com/documentation/web-api/reference/\">public API</a>. This API allows you to do many\nthings, not limited to</p>\n<ul>\n<li>listing songs in a user’s library</li>\n<li>searching and adding songs to a user’s library</li>\n<li>(!) pulling audio feature data for tracks <!-- link --></li>\n<li>(!) controlling playback of the active device</li>\n</ul>\n<p>Now I’m prototyping an app.</p>\n<p>In an ideal world since I listen to so much music on mobile, I’d probably\nconsider building a mobile app first. I probably wouldn’t personally want to\nuse a mobile app as often because organizing music like this is a particularly\nwrite-heavy workflow. This would be like trying to use a spreadsheet on\na phone. However, I still find myself wanting to record these properties while\nmobile. If you’re planning on having feature parity between mobile and desktop\nexperiences, it’s a good idea to plan how to achieve that up front.</p>\n<p>Further down this ideal world, I’d probably build a mobile app first,\nand then consider reusing business logic in a desktop application built using\nthe same toolchain.</p>\n<p>But this is a prototype. I’m going to use the tools I’m most familiar with. For\nUI, that’s frontend development. So I’m prototyping an Electron app.</p>\n<h1>Some design decisions</h1>\n<h2>Representing musical properties</h2>","frontmatter":{"date":"September 9, 2019","path":"/posts/labeling-my-music","title":"Labeling music"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}