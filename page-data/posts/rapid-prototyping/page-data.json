{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/rapid-prototyping","webpackCompilationHash":"08a57498c7f504c79e87","result":{"data":{"markdownRemark":{"html":"<style>\n.colors {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.color {\n  min-width: 200px;\n  width: 40%;\n  height: 40px;\n  border-radius: 20px;\n  margin: 1px 0;\n  box-shadow: 0 14px 45px 1px rgba(8, 12, 17, 0.3);  \n}\n</style>\n<p>For a small project I needed to produce a set of colors that would\ncontrast one another. I started by drawing a stack of shapes in my favorite\ndesign tool, and then coloring each shape individually.</p>\n<div class=\"colors\">\n  <div class=\"color\" style=\"background-color: #e9404a\"></div>\n  <div class=\"color\" style=\"background-color: #e4773a\"></div>\n  <div class=\"color\" style=\"background-color: #f2c245\"></div>\n  <div class=\"color\" style=\"background-color: #4f9e3b\"></div>\n  <div class=\"color\" style=\"background-color: #43afa9\"></div>\n  <div class=\"color\" style=\"background-color: #6580c7\"></div>\n  <div class=\"color\" style=\"background-color: #9d57ae\"></div>\n  <div class=\"color\" style=\"background-color: #d95d98\"></div>\n  <div class=\"color\" style=\"background-color: #766f8f\"></div>\n  <div class=\"color\" style=\"background-color: #4f4966\"></div>\n</div>\n<p>I needed to be able to overlay text over each color too. I copied each hex\nvalue out of my vector editor and into a script</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> colors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token string\">'#e9404a'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#e4773a'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#f2c245'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#4f9e3b'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#43afa9'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#6580c7'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#9d57ae'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#d95d98'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#766f8f'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'#4f4966'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Since I wanted to ensure the text color was <em>perceptually</em> distinct from the background, I first grabbed a library that could manipulate colors in <a href=\"https://en.wikipedia.org/wiki/CIELAB_color_space\">Lab space</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> chroma <span class=\"token keyword\">from</span> <span class=\"token string\">'chroma-js'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Then I brightened each color:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> brightened <span class=\"token operator\">=</span> colors<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">c</span> <span class=\"token operator\">=></span>\n  <span class=\"token function\">chroma</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lab.l'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'+45'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And logged the pairs of colors:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">colors<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">color<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>color<span class=\"token punctuation\">,</span> brightened<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// => #e9404a #ffc3bd</span>\n<span class=\"token comment\">//    #e4773a #fff3af</span>\n<span class=\"token comment\">//    ...</span></code></pre></div>\n<p>Eventually I just used a vim macro to write the CSS:</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\"><span class=\"token selector\">.red</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #e9404a<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #ffc3bd<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid #ffc3bd33<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.orange</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/* ... */</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Great. </p>\n<p>Time passed. At some point I recognized that the yellow text color was clipping\ninto. At another point I decided to add some new colors. I just ran through\nthe process again for these minor changes—first I visualized the colors in my\ndesign prototype, then I copied them into the script, and eventually replaced\nthe CSS.</p>\n<p>I was tired of copy pasting, but I wanted to tweak all of the colors again. So\nI figured I needed a tool. I couldn’t think of a better way to couple a bunch\nof color pickers together than using a web page. I ran <a href=\"https://create-react-app.dev\">create-react-app</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"command-line-prompt\"><span data-user=root data-host=localhost></span></span><span class=\"token function\">yarn</span> create react-app color-picker</code></pre></div>\n<p>I quickly threw together a color picker that displayed the chosen colors.</p>\n<p><img src=\"/files/bd66e11ee871196614b239911288d059/color-picker-screenshot.png\" alt=\"Color picker screenshot\"></p>\n<p>And a button to copy the CSS.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">generateCSS</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">colors</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> classes <span class=\"token operator\">=</span> colors<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>name<span class=\"token punctuation\">,</span> bgColor<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> color <span class=\"token operator\">=</span> <span class=\"token function\">chroma</span><span class=\"token punctuation\">(</span>bgColor<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lab.l'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'+45'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> {\n  background-color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>bgColor<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  color: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>color<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;\n  border: solid 1px </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>color<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">33;\n}</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> classes<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleCopy</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> css <span class=\"token operator\">=</span> <span class=\"token function\">generateCSS</span><span class=\"token punctuation\">(</span>colors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  navigator<span class=\"token punctuation\">.</span>clipboard<span class=\"token punctuation\">.</span><span class=\"token function\">writeText</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/* ... */</span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>handleCopy<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  Copy CSS\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>After 10 minutes, I had a tool that let me visualize all of\nthese color changes. It also saved me the minutes it took to copy each color\nthrough the old pipeline.</p>\n<p>Four years ago I don’t think I would have considered building\na frontend widget for a problem like this. The friction of setting up a dev\nenvironment was too high. You needed too much boilerplate just to string some basic UI together. Sure, there were prototyping frameworks at the time that made things easier, but I never thought to learn those frameworks to improve my local tooling.</p>\n<p>Nowadays the most popular frameworks are even easier to use. UI components are\nsimple functions. You can see output after every file save.</p>\n<p>Life working on frontend is great. In cases like this, it improves my\nproductivity across domains too.</p>\n<hr>\n<p>I’m surprised that to this date, we haven’t seen much innovation in the ability\nto quickly build tools to solve your own problems.</p>\n<p>Sure, there are plenty of tools out there that enable exploration and\nprototyping. There are Jupyter notebooks for performing analysis and\nvisualizing output. Everyday spreadsheet software is capable of doing most\nprogramming tasks, albeit with lackluster ergonomics. You can buy a 3D printer\nfor your home or office and quickly produce physical objects.</p>\n<p>But I can’t think of a better tool for performing this particular task. And\nthat’s sad, because while it was pretty easy for me to throw a few React\ncomponents together, I had to be familiar with HTML, CSS, JS, NPM, React, the DOM\nevent model—just to name a few things—to wire together some inputs that let me\nvisualize a color scheme.</p>\n<p>It’s not even complete. I haven’t been able to justify building something to\nimport the colors back into my design tool.</p>\n<p>Sure, this example is contrived. How often do people need to build\nconstraint-based color schemes? And how often do they need a system like this\nand don’t have access to programming resources? I’m not sure.</p>\n<hr>\n<p>Perhaps I’m just feeling sentimental now that I’ve been away from work for\na bit. When I chose to pursue engineering as a career, I did so because I felt\nthat I was able to extract unique value from using computers and the\ninternet—whether through education, research, organization, or other\nactivities—and I wanted find ways to make those abilities more accessible.</p>\n<p>Working at Stripe scratched that itch a little bit. Stripe made it easier to\nstart your own business in the internet age. There are people who wouldn’t have\ntheir livelihoods if not for the products that Stripe provides. </p>\n<p>Stripe unlocked opportunities and systems that already existed, but were gated\naway by the actors in control. Very little of Stripe’s product is particularly\nimaginative in terms of what it enables its users to do. It’s about moving money\nusing the rails that have existed for many years. These are processes that were\nhistorically difficult to perform due to restrictions in the market. Not due to\ntechnical reasons. There are problems here worth solving, but at the end of the\nday it only satisfied that original goal in a limited way.</p>\n<p>I’m not saying my day job has to scratch that itch. It’d be great if it did,\nbut I also see the value in picking up a wider variety of skills over a career.</p>\n<p>I’m still sad that there aren’t better tools out there.</p>\n<hr>\n<p>People are exploring alternative models of computing out there, and I think\nthat’s novel and worth pursuing. </p>\n<p><img src=\"/files/20f773c725e22a830fbf18cef589c518/dynamicland-1-2-programming.jpg\" alt=\"Dynamicland\"></p>\n<div class=\"caption\">Computation with real world objects at <a href=\"https://dynamicland.org\">Dynamicland</a></div>\n<p>However, rethinking <em>computation</em> is a huge task.\nThere are smaller goals in this space that are also worth pursuing.</p>","frontmatter":{"date":"September 9, 2019","path":"/posts/rapid-prototyping","title":"Making tools"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}