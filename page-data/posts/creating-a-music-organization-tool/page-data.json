{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/creating-a-music-organization-tool","webpackCompilationHash":"08a57498c7f504c79e87","result":{"data":{"markdownRemark":{"html":"<p>For years I have wanted a tool that lets me organize my music library based on\nthe instruments, genres, and other properties you can perceive in individual\ntracks.\n<a href=\"/files/66cc089c3b129e11d3c5c3cdb026688f/labels-collage.jpg\"><img src=\"/files/66cc089c3b129e11d3c5c3cdb026688f/labels-collage.jpg\" /></a></p>\n<div class=\"caption\">\n  Collage of musical labels\n</div>\n<p>And then search through my library based on combinations of these\nproperties.</p>\n<p><video src=\"/files/4a5d7a9ee9b84d126a1b15a4fd25d150/label-editing.mov\" autoplay loop style=\"width: 322px;\"></video></p>\n<p>This tool needed to seamlessly integrate with the ways I already listen to\nmusic, both on mobile and desktop. It’d be great if it could replace those\nother systems too.</p>\n<!-- consider writing this whole section in present tense, like a talk -->\n<p>This story begins in 2008. This was before the launch and amazing growth of\nmusic streaming platforms like Spotify and Apple Music. This was back when you\nneeded to download MP3s if you wanted to listen to music on the go. How you\nobtained these MP3s was pretty relevant. There were hundreds of services with\nlicensed music out there, but the best ways to obtain MP3s at the time boiled\ndown to two methods:</p>\n<ol>\n<li>Purchasing via the iTunes store</li>\n<li>Piracy</li>\n</ol>\n<p>As an unemployed high school student, I resorted to the latter.</p>\n<p>2008 is memorable to me because it’s when I gained access to <a\nhref=\"https://en.wikipedia.org/wiki/What.CD\">what.cd</a>. what.cd was\na veritable treasure trove of musical content at the time. Every edition of any\nalbum you could name was available for download. There was a vibrant community\nfull of music enthusiasts that curated lists of albums.\nThere were even a handful artists that distributed their music via what.cd at the\ntime[0].</p>\n<img src=\"/files/88cd82b00e31f72588f9b0e0992d398b/soundtrack-to-a-vacant-life-trimmed.jpg\" width=\"300\" />\n<div class=\"caption\">\n  Soundtrack to a Vacant Life, one of the most memorable albums distributed via\n  what.cd.\n</div>\n<p>As a result, I found myself downloading a lot of music. More music than I could\nkeep track in an effective way. I was downloading an\naverage of probably 6-7 releases per week.</p>\n<p>My desktop music player of choice was <a href=\"https://en.wikipedia.org/wiki/Foobar2000\">foobar2000</a>, known for its “highly modular design” and “substantial user flexibility in configuration.”</p>\n<p>I customized the hell out of my foobar configuration. I separated the player\ninto two modes: listening and organizing. </p>\n<p>Listening mode enabled you to select existing playlists or albums to listen to\nwith ease. It was designed for presenting the currently playing track and the\nfollowing queue. </p>\n<p>The organization mode was designed to present as many tracks as possible while\nstill displaying all of the information relevant for organizing them into\nplaylists. This included data such as the number of times I’d played the song,\nthe tags, its release date, the relative rating I’d assigned to it. This mode\nlooked more like a spreadsheet than a music player.</p>\n<p>This system worked well for me for a little while. But soon I found myself\nusing OS X more often than Windows, and therefore had limited access to my\nmusic player of choice. </p>\n<p>For a while I’d bounce between Windows and OS X just to shuffle music around\nand update my playlists. Eventually I became tired of the tedious routine and\nsettled. I exported my last playlists to iTunes and stopped using foobar2000\nfor good.</p>\n<p>This experience left a void in me. I yearned for the ability to adjust my\ntools.</p>\n<hr>\n<p>Many years later, circa 2015, I had some free time available and felt the urge\nto work on a UI-heavy project. The idea of building a cross platform version of foobar2000 had\nalways been in the back of my mind. </p>\n<p>There were some features I considered table stakes:</p>\n<ul>\n<li>Open source.</li>\n<li>Gapless playback of popular audio formats, including FLAC.</li>\n<li>Library management tools—it should be able to store information about your music, not just play it.</li>\n<li>Plugin API and built-in plugin marketplace. This API needed to interact well with library management: plugins needed an interface for sharing data with one another.</li>\n</ul>\n<p>2015 in particular seemed like the perfect time to\nexplore the concept more seriously. </p>\n<p>Javascript was immensely popular. React had effectively won as frontend\nframework of choice, and Redux was beginning to take hold. Atom paved the way for building extensible desktop applications using JS.</p>\n<!-- picture of atom -->\n<p>I started to build prototypes. I set up a build pipeline to compile Electron\nwith a native node addon I’d written to link <a href=\"https://github.com/mpv-player/mpv/blob/master/libmpv/client.h\">libmpv</a>. It was all good fun to refamiliarize myself with C++ and bang my head against some node-gyp.</p>\n<p>I quickly had playback, then a SQLite backend for library support, then\na parallelized filesystem crawler. I made very few assumptions about the UI so\nthat future plugin architects could replace it entirely: a browser window wasn’t even necessary. All data was requested and\nbroadcast through targeted Redux actions.</p>\n<p>However, just as quickly, work and life took over. I abandoned the project before releasing\nanything publicly.</p>\n<hr>\n<p>More time passed. </p>\n<p>Music streaming services got good. Like, really good. Spotify and Apple Music\nwere competing against each other aggressively. Other competitors were entering\nthe space.</p>\n<p>I abandoned my local media library. First in favor of iTunes Match via Apple\nMusic, then later\nfor Spotify. Most of the content I cared about was now streamable. </p>\n<p>Streaming services were able to keep track of music I actually liked while\nstill keeping the rest of the global media library within reach. I still\nyearned for better organizational tools, but at least I didn’t have to choose\nto delete music I didn’t like upon first listen.</p>\n<hr>\n<p>No other service could beat Spotify’s recommendations for me. I was listening to several new artists every week. </p>\n<p>New problems developed. Friends would ask me if I’d heard of a band, and I’d have to check my saved songs to confirm.</p>\n<p>I frequently found myself wanting to look up a band I’d just listened to weeks\nor months\nprior. I could describe them in\nterms of their genre, their instrumentation, or other elements of their tracks.\nBut I had great difficulty producing their names.</p>\n<hr>\n<!-- add link -->\n<p>Earlier this year I discovered that Spotify exposes a public Web API.</p>\n<img src=\"/files/7f9585c140d7e6be2675e46e1456c529/plz-replace-spoot-screen1.png\" class=\"noshadow\" />\n<p>[0] <a href=\"https://www.npr.org/sections/monitormix/2009/11/the_in_rainbows_experiment_did.html\">Similar activities</a> were being performed by artists to generate publicity. However, I don’t believe this diminishes the extent of the community that existed then.</p>","frontmatter":{"date":"September 9, 2019","path":"/posts/creating-a-music-organization-tool","title":"Prologue: Creating a music organization tool"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}}